{"version":3,"file":"index.js","sources":["../src/ModalProvider.tsx","../src/useModal.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { ComponentType, createContext, useState } from 'react';\r\n\r\nexport interface ModalObject<res = any, req = any> {\r\n  resolve: (value: res) => void;\r\n  reject: (reason?: any) => void;\r\n  data: req;\r\n  component: ComponentType<Modal<req, res>>;\r\n  canClose: boolean;\r\n}\r\n\r\nexport interface Modal<T, R = unknown> {\r\n  data: T;\r\n  submit: (res: R) => void;\r\n  cancel: () => void;\r\n}\r\n\r\ninterface contextState {\r\n  modal?: ModalObject;\r\n  setModal: (obj: ModalObject, backgroundClassName?: string) => void;\r\n}\r\n\r\nexport interface ModalProviderProps {\r\n  backgroundClassName?: string;\r\n  backgroundId?: string;\r\n}\r\n\r\nexport const ModalContext = createContext<contextState>({\r\n  setModal: () => {},\r\n});\r\n\r\nconst ChildWrapper = React.memo(({children}) => <>{children}</>)\r\n\r\nexport const ModalProvider: React.FC<ModalProviderProps> = ({\r\n  children,\r\n  backgroundClassName = 'async-modals__background',\r\n  backgroundId = 'modal-back',\r\n}) => {\r\n  const [modal, setModal] = useState<ModalObject>();\r\n  const [bgClassName, setBgClassName] = useState<string>(\r\n    ''\r\n  );\r\n  const ctx: contextState = {\r\n    setModal: (obj, backgroundClassName = '') => {\r\n      setModal(obj);\r\n      setBgClassName(backgroundClassName);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={ctx}>\r\n      <ChildWrapper>{children}</ChildWrapper>\r\n      {modal && (\r\n        <div\r\n          className={backgroundClassName + ' ' + bgClassName}\r\n          id={backgroundId}\r\n          onMouseDown={e => {\r\n            if (modal.canClose && (e.target as any)?.id === backgroundId) {\r\n              modal.resolve(undefined);\r\n              setModal(undefined);\r\n            }\r\n          }}\r\n        >\r\n          <modal.component\r\n            data={modal.data}\r\n            submit={(data?: unknown) => {\r\n              modal.resolve(data);\r\n              setModal(undefined);\r\n            }}\r\n            cancel={() => {\r\n              modal.resolve(undefined);\r\n              setModal(undefined);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n","import { ComponentType, useContext } from 'react';\r\nimport { Modal, ModalContext, ModalObject, } from './ModalProvider';\r\n\r\ninterface options<T> {\r\n  /**\r\n   * Data that will be accessible in the component as props\r\n   */\r\n  data?: T;\r\n  /**\r\n   * Classes to apply to the background when the modal is open\r\n   */\r\n  backgroundClassName?: string;\r\n  /**\r\n   * Allow the user to close the modal by clicking on the background.\r\n   * By default this is set to true\r\n   */\r\n  canClose?: boolean;\r\n}\r\n\r\nexport const useModal = <req,res>(modal: ComponentType<Modal<req, res>>) => {\r\n  const { setModal } = useContext(ModalContext);\r\n\r\n  return {\r\n    show: async(\r\n      options: options<req> = {}\r\n    ): Promise<res | undefined> =>\r\n      new Promise((resolve, reject) => {\r\n        const obj: ModalObject<res> = {\r\n          resolve,\r\n          reject,\r\n          data: options.data,\r\n          component: modal,\r\n          canClose: options.canClose === undefined ? true : options.canClose,\r\n        };\r\n        setModal(obj, options.backgroundClassName);\r\n      }),\r\n  };\r\n};\r\n"],"names":["createContext","React","useState","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BO,IAAM,YAAY,GAAGA,mBAAa,CAAe;IACtD,QAAQ,EAAE,eAAQ;CACnB,CAAC,CAAC;AAEH,IAAM,YAAY,GAAGC,gBAAK,CAAC,IAAI,CAAC,UAAC,EAAU;QAAT,QAAQ,cAAA;IAAM,OAAAA,gEAAG,QAAQ,CAAI;AAAf,CAAe,CAAC,CAAA;IAEnD,aAAa,GAAiC,UAAC,EAI3D;QAHC,QAAQ,cAAA,EACR,2BAAgD,EAAhD,mBAAmB,mBAAG,0BAA0B,KAAA,EAChD,oBAA2B,EAA3B,YAAY,mBAAG,YAAY,KAAA;IAErB,IAAA,KAAoBC,cAAQ,EAAe,EAA1C,KAAK,QAAA,EAAE,QAAQ,QAA2B,CAAC;IAC5C,IAAA,KAAgCA,cAAQ,CAC5C,EAAE,CACH,EAFM,WAAW,QAAA,EAAE,cAAc,QAEjC,CAAC;IACF,IAAM,GAAG,GAAiB;QACxB,QAAQ,EAAE,UAAC,GAAG,EAAE,mBAAwB;YAAxB,oCAAA,EAAA,wBAAwB;YACtC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACd,cAAc,CAAC,mBAAmB,CAAC,CAAC;SACrC;KACF,CAAC;IAEF,QACED,+BAAC,YAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,GAAG;QAC/BA,+BAAC,YAAY,QAAE,QAAQ,CAAgB;QACtC,KAAK,KACJA,wCACE,SAAS,EAAE,mBAAmB,GAAG,GAAG,GAAG,WAAW,EAClD,EAAE,EAAE,YAAY,EAChB,WAAW,EAAE,UAAA,CAAC;;gBACZ,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAA,MAAC,CAAC,CAAC,MAAc,0CAAE,EAAE,MAAK,YAAY,EAAE;oBAC5D,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBACzB,QAAQ,CAAC,SAAS,CAAC,CAAC;iBACrB;aACF;YAEDA,+BAAC,KAAK,CAAC,SAAS,IACd,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,MAAM,EAAE,UAAC,IAAc;oBACrB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACpB,QAAQ,CAAC,SAAS,CAAC,CAAC;iBACrB,EACD,MAAM,EAAE;oBACN,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBACzB,QAAQ,CAAC,SAAS,CAAC,CAAC;iBACrB,GACD,CACE,CACP,CACqB,EACxB;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC3Da,QAAQ,GAAG,UAAU,KAAqC;IAC7D,IAAA,QAAQ,GAAKE,gBAAU,CAAC,YAAY,CAAC,SAA7B,CAA8B;IAE9C,OAAO;QACL,IAAI,EAAE,UACJ,OAA0B;YAA1B,wBAAA,EAAA,YAA0B;;;oBAE1B,sBAAA,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;4BAC1B,IAAM,GAAG,GAAqB;gCAC5B,OAAO,SAAA;gCACP,MAAM,QAAA;gCACN,IAAI,EAAE,OAAO,CAAC,IAAI;gCAClB,SAAS,EAAE,KAAK;gCAChB,QAAQ,EAAE,OAAO,CAAC,QAAQ,KAAK,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,QAAQ;6BACnE,CAAC;4BACF,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,mBAAmB,CAAC,CAAC;yBAC5C,CAAC,EAAA;;;SAAA;KACL,CAAC;AACJ;;;;;"}