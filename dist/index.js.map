{"version":3,"file":"index.js","sources":["../src/ModalProvider.tsx","../src/useModal.ts"],"sourcesContent":["import * as React from \"react\";\r\nimport { ComponentType, createContext, useEffect, useRef, useState } from \"react\";\r\n\r\n// A Modal object stores information about a modal being shown\r\nexport interface ModalObject<Data = any, Response = any, > {\r\n  resolve: (data: Response) => void;\r\n  reject: (reason?: any) => void;\r\n  data?: Data;\r\n  component: ComponentType<Modal<Data, Response>>;\r\n  canClose: boolean;\r\n}\r\n\r\nexport interface Modal<Data, Response = unknown> {\r\n  data: Data;\r\n  submit: (res: Response) => void;\r\n  cancel: () => void;\r\n  isClosing?: boolean;\r\n}\r\n\r\ninterface contextState {\r\n  modal?: ModalState;\r\n  setModal: (obj: ModalObject) => void;\r\n  closeModal: (data?: unknown) => void;\r\n}\r\n\r\nexport interface ModalProviderProps {\r\n  // Classnames to pass to the modal background component\r\n  backgroundClassName?: string | ((isClosing?: boolean) => string);\r\n\r\n  // add a delay between when the modal closes and when the component unmounts, this allows time for a closing animation to play\r\n  exitDelay?: number;\r\n\r\n  // background opacity - defaults to 50%\r\n  backgroundOpacity?: number;\r\n}\r\n\r\nexport const ModalContext = createContext<contextState>({\r\n  setModal: () => {},\r\n  closeModal: () => {},\r\n});\r\n\r\nconst ChildWrapper = React.memo(({ children }) => <>{children}</>);\r\n\r\ninterface ModalState {\r\n  modal?: ModalObject;\r\n  isClosing?: boolean;\r\n  exitDelay?: number;\r\n}\r\n\r\nexport const ModalProvider: React.FC<ModalProviderProps> = ({\r\n  children,\r\n  backgroundClassName: baseClassName = \"async-modals__background\",\r\n  exitDelay = 0,\r\n  backgroundOpacity = 0.5,\r\n}) => {\r\n\r\n  const [state, setState] = useState<ModalState>({\r\n    exitDelay,\r\n  });\r\n\r\n  // Timer for tracking when the modal is closing (animation)\r\n  const animationTimer = useRef<number>();\r\n\r\n  // Close the modal, optionally passing in some data\r\n  const closeModal = (data?: unknown) => {\r\n    if(exitDelay){\r\n      // If exit delay is set then dont unmount until timer is up\r\n      setState(s => ({\r\n        ...s,\r\n        isClosing: true,\r\n      }))\r\n      animationTimer.current = window.setTimeout(() => {\r\n        state.modal?.resolve(data);\r\n        setState({});\r\n      }, exitDelay)\r\n    } else {\r\n      state.modal?.resolve(data);\r\n      setState({});\r\n    }\r\n  };\r\n\r\n  // Cleanup hook for animation timer\r\n  useEffect(() => {\r\n    //listener to prevent navigation and instead close the modal\r\n    const listener = (e: any) => {\r\n      console.log(e.state);\r\n      if(e.state?.modal !== true){\r\n        closeModal();\r\n      }\r\n      }\r\n      // window.history.pushState({modal: false}, '');\r\n    \r\n    window.addEventListener('popstate', listener);\r\n    \r\n    return () => window.clearTimeout(animationTimer.current)\r\n  }, [])\r\n\r\n\r\n\r\n  const context: contextState = {\r\n    setModal: (obj) => {\r\n      history.replaceState({modal: false}, '');\r\n      history.pushState({modal: true}, '');\r\n      setState((s) => ({\r\n        ...s,\r\n        modal: obj,\r\n      }));\r\n    },\r\n    modal: state,\r\n    closeModal: (data?: unknown) => {\r\n      closeModal(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      <ChildWrapper>{children}</ChildWrapper>\r\n      {state.modal && (\r\n        <div\r\n          className={typeof baseClassName === 'function' ? baseClassName(state.isClosing) : baseClassName}\r\n          style={{transitionDuration: `${exitDelay}ms`, backgroundColor: state.isClosing ? undefined : `rgba(0,0,0,${backgroundOpacity})`}}\r\n          id=\"modal-back\"\r\n          onMouseDown={(e) => {\r\n            if (\r\n              state.modal?.canClose &&\r\n              (e.target as any)?.id === \"modal-back\"\r\n            ) {\r\n              closeModal();\r\n            }\r\n          }}\r\n        >\r\n          <state.modal.component\r\n            data={state.modal.data}\r\n            submit={(data?: unknown) => closeModal(data)}\r\n            cancel={() => closeModal()}\r\n            isClosing={state.isClosing}\r\n          />\r\n        </div>\r\n      )}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n","import { ComponentType, useContext } from 'react';\r\nimport { Modal, ModalContext, ModalObject, } from './ModalProvider';\r\n\r\n//Options the user can specify\r\ninterface options<T> extends settings{\r\n  /**\r\n   * Data that will be accessible in the component as props\r\n   */\r\n  data?: T;\r\n\r\n}\r\n\r\ninterface settings {\r\n  /**\r\n   * Allow the user to close the modal by clicking on the background.\r\n   * By default this is set to true\r\n   */\r\n   canClose?: boolean;\r\n   /**\r\n    * Add a delay between when the modal is closed and when it is removed from the component tree.\r\n    * Use this to add an close animation to the modal \r\n    */\r\n   unRenderDelay?: number;\r\n}\r\n\r\n// Overloads\r\nexport function useModal(modalComponent?: undefined, modalOptions?: settings): {\r\n  show: <Data, Response>(component: ComponentType<Modal<Data, Response>>, options?: options<Data>) => Promise<Response | undefined>;\r\n  close: () => void;\r\n};\r\nexport function useModal<Data,Response>(modalComponent: ComponentType<Modal<Data, Response>>, modalOptions?: options<Data>): {\r\n  show: (options?: options<Data>) => Promise<Response | undefined>;\r\n  close: () => void;\r\n};\r\n\r\nexport function useModal<Data,Response>(modalComponent?: ComponentType<Modal<Data, Response>>, modalOptions: options<Data> = {}): any {\r\n  const { setModal, closeModal } = useContext(ModalContext);\r\n\r\n  return {\r\n    show: async (component: ComponentType<Modal<Data, Response>>, options: options<Data> = modalOptions): Promise<Response | undefined> =>\r\n    new Promise((resolve, reject) => {\r\n      const obj: ModalObject<Data, Response> = {\r\n        resolve,\r\n        reject,\r\n        data: options.data,\r\n        component: component || modalComponent,\r\n        canClose: Boolean(options.canClose),\r\n      };\r\n      setModal(obj);\r\n    }), \r\n    close: () => closeModal()\r\n  };\r\n};"],"names":["createContext","React","useState","useRef","useEffect","useContext"],"mappings":"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"}