{"version":3,"file":"index.js","sources":["../src/util.ts","../src/ModalProvider.tsx","../src/useModal.ts"],"sourcesContent":["import { ModalSettings } from \"./types\";\r\n\r\nexport const disablebodyScroll = () => {\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\nexport const enableBodyScroll = () => {\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nexport const getBaseClassnames = (animated?: boolean) => {\r\n    return animated\r\n    ? (isClosing: boolean) =>\r\n        `async-modals__bg-base async-modals__${isClosing ? \"closing\" : \"open\"}`\r\n    : \"async-modals__bg-base async-modals__open\"\r\n}\r\n\r\nexport const resolveStyles = (settings: ModalSettings): {[key: string]: string | number} => ({\r\n    '--duration': `${settings.cssAnimationDuration || 500}ms`,\r\n    '--opacity': settings.cssBgOpacity || 0.5,\r\n    '--tw-backdrop-opacity': settings.cssBgOpacity || 0.5,\r\n})","import * as React from \"react\";\nimport { createContext, useEffect, useRef, useState } from \"react\";\nimport { ModalObject, ModalSettings } from \"./types\";\nimport { disablebodyScroll, enableBodyScroll, getBaseClassnames, resolveStyles } from \"./util\";\n\ninterface contextState {\n  modal?: ModalState;\n  setModal: (obj: ModalObject) => void;\n  closeModal: () => void;\n  setModalData: (data?: unknown) => void;\n}\n\nexport interface ModalProviderProps {\n  // Default settings\n  defaultSettings?: ModalSettings;\n}\n\nexport const ModalContext = createContext<contextState>({\n  setModal: () => {},\n  closeModal: () => {},\n  setModalData: () => {},\n});\n\nconst ChildWrapper = React.memo(({ children }) => <>{children}</>);\n\ninterface ModalState {\n  modal?: ModalObject;\n  isClosing?: boolean;\n}\n\nconst defaultModalOptions: ModalSettings = {\n  canClose: true,\n  showBg: true,\n  containerClassName: 'async-modals__center_modal'\n}\n\nexport const ModalProvider: React.FC<ModalProviderProps> = ({\n  children,\n  defaultSettings,\n}) => {\n  const [state, setState] = useState<ModalState>({});\n\n  const modalBg = useRef<HTMLDivElement>(null);\n\n  // Close the modal, optionally passing in some data\n  const closeModal = (data?: unknown) => {\n    const close = () => {\n      enableBodyScroll();\n      state.modal?.resolve(data);\n      setState({});\n    };\n\n    if (state.modal?.settings.animated) {\n      // If animated then wait for animation or transition event to fire\n      setState((s) => ({\n        ...s,\n        isClosing: true,\n      }));\n\n      const listener = () => close();\n\n      modalBg.current?.addEventListener(\"transitionend\", listener);\n      modalBg.current?.addEventListener(\"webkitTransitionEnd\", listener);\n      modalBg.current?.addEventListener(\"animationend\", listener);\n      modalBg.current?.addEventListener(\"webkitAnimationEnd\", listener);\n    } else {\n      close();\n    }\n  };\n\n  // Cleanup hook for animation timer\n  useEffect(() => {\n    //listener to prevent navigation and instead close the modal\n    const listener = (e: any) => {\n      if (e.state?.modal !== true) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener(\"popstate\", listener);\n\n    return () => {\n      window.removeEventListener(\"popstate\", listener);\n    };\n  }, []);\n\n  const context: contextState = {\n    setModal: ({ settings, ...rest }) => {\n      history.replaceState({ modal: false }, \"\");\n      history.pushState({ modal: true }, \"\");\n\n      if(!settings.allowContentScrolling){\n        disablebodyScroll();\n      }\n\n      const newSettings = {\n        ...defaultModalOptions,\n        ...defaultSettings,\n        ...settings,\n      }\n\n      setState((s) => ({\n        ...s,\n        modal: {\n          ...rest,\n          settings: {\n            backgroundClassName: getBaseClassnames(newSettings.animated),\n            ...newSettings,\n          },\n        },\n      }));\n    },\n    modal: state,\n    closeModal: () => {\n      history.back();\n      closeModal();\n    },\n    setModalData: (data?: unknown) => {\n      setState(s => ({...s, \n        modal: { \n            ...(s.modal as ModalObject),\n           data \n          }\n       }))\n    }\n  };\n\n  return (\n    <ModalContext.Provider value={context}>\n      <ChildWrapper>{children}</ChildWrapper>\n      {state.modal && (\n        <div\n          className={`async-modals__wrapper`}\n          id=\"modal-back\"\n          style={resolveStyles(state.modal.settings)}\n          onMouseDown={(e) => {\n            if (\n              state.modal?.settings.canClose &&\n              (e.target as any)?.id === \"modal-back\"\n            ) {\n              closeModal();\n            }\n          }}\n        >\n          {\n            <div\n              className={`${\n                typeof state.modal.settings.backgroundClassName === \"function\"\n                  ? state.modal.settings.backgroundClassName(state.isClosing)\n                  : state.modal.settings.backgroundClassName\n              } ${!state.modal.settings.showBg && \"async-modals__hidden\"}`}\n              ref={modalBg}\n            />\n          }\n          <div\n            className={`async-modals__container ${state.modal.settings.containerClassName}`}\n          >\n            <state.modal.component\n              data={state.modal.data}\n              submit={(data?: unknown) => closeModal(data)}\n              cancel={() => closeModal()}\n              isClosing={state.isClosing}\n            />\n          </div>\n        </div>\n      )}\n    </ModalContext.Provider>\n  );\n};\n","import { ComponentType, useContext } from 'react';\nimport { Modal } from '.';\nimport { ModalContext } from './ModalProvider';\nimport { ModalSettings, options, ModalObject } from './types';\n\n// Overloads\n// If the user doesnt specify a component, force them to specify a component when they call show()\nexport function useModal(modalComponent?: undefined, modalOptions?: ModalSettings): {\n  show: <Data, Response>(component: ComponentType<Modal<Data, Response>>, options?: options<Data>) => Promise<Response | undefined>;\n  close: () => void;\n};\n//If the user has already specified a component, dont let them to specify it when they call show()\nexport function useModal<Data,Response>(modalComponent: ComponentType<Modal<Data, Response>>, modalOptions?: options<Data>): {\n  show: (options?: options<Data>) => Promise<Response | undefined>;\n  close: () => void;\n  updateModalData: (data: Data) => void;\n};\n\nexport function useModal<Data,Response>(modalComponent?: ComponentType<Modal<Data, Response>>, modalOptions?: options<Data>): any {\n  const { setModal, closeModal, setModalData } = useContext(ModalContext);\n\n  const show = (component: ComponentType<Modal<Data, Response>>) => async ( options?: options<Data>): Promise<Response | undefined> =>\n  new Promise((resolve, reject) => {\n\n    //compose options object\n    const settings: ModalSettings  = {\n      ...modalOptions,\n      ...options\n    }\n\n    const obj: ModalObject<Data, Response> = {\n      resolve,\n      reject,\n      data: options?.data,\n      component,\n      settings,\n    };\n    setModal(obj);\n  })\n\n  return {\n    show: modalComponent ? show(modalComponent) : (component: ComponentType<Modal<Data, Response>>, options: options<Data>) => show(component)(options),\n    close: () => closeModal(),\n    updateModalData: modalComponent ? (data: Data) => {setModalData(data)} : undefined\n  };\n};"],"names":["createContext","React","useState","useRef","useEffect","useContext"],"mappings":"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"}